{"version":3,"file":"static/js/212.701ea324.chunk.js","mappings":"sVAGaA,EAAS,kCAERC,EAAe,mCAAE,6GAEJC,EAAAA,EAAAA,IACrB,0FAHyB,cAErBC,EAFqB,yBAKpBA,GALoB,wFAAF,qDAYhBC,EAAmB,mCAAG,WAAOC,GAAP,gGAENH,EAAAA,EAAAA,IAAA,mGACuEG,EADvE,2BAFM,cAEvBF,EAFuB,yBAKtBA,GALsB,wFAAH,sDAUnBG,EAAoB,mCAAG,WAAMC,GAAN,gGAEXL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,8DAFW,cAE5BJ,EAF4B,yBAKvBA,GALuB,wFAAH,sDASlBK,EAAmB,mCAAG,WAAMD,GAAN,gGAEZL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,sEAFY,cAE7BJ,EAF6B,yBAKxBA,GALwB,wFAAH,sDASjBM,EAAgB,mCAAG,WAAMF,GAAN,gGAEPL,EAAAA,EAAAA,IAAA,6CACiBK,EADjB,6EAFO,cAExBJ,EAFwB,yBAKvBA,GALuB,wFAAH,sDAQjCC,EAAoBM,UAAY,CAC9BL,OAAQM,IAAAA,OAAAA,YAEVL,EAAqBI,UAAY,CAC/BL,OAAQM,IAAAA,OAAAA,YAEVH,EAAoBE,UAAY,CAC9BL,OAAQM,IAAAA,OAAAA,YAEVF,EAAiBC,UAAY,CAC3BL,OAAQM,IAAAA,OAAAA,W,iLC5DGC,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,wKAUZE,EAAUF,EAAAA,GAAAA,IAAH,wHAOPG,EAASH,EAAAA,GAAAA,IAAH,gEAKNI,EAAcJ,EAAAA,GAAAA,IAAH,oFAMXK,EAAOL,EAAAA,GAAAA,KAAH,wCAIJM,EAAQN,EAAAA,GAAAA,GAAH,yCAGLO,EAAcP,EAAAA,GAAAA,GAAH,6IAOXQ,EAASR,EAAAA,GAAAA,GAAH,wF,SCiCnB,MA/DA,WAAyB,IAAD,IACdN,GAAYe,EAAAA,EAAAA,MAAZf,QACR,GAA0BgB,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAWF,EAASG,MAAMC,MAEhCC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAuBxB,GAAvB,mGAE2BD,EAAAA,EAAAA,IAAqBC,GAFhD,gBAEYyB,EAFZ,EAEYA,KAERP,EAASO,GAJb,gDAMIC,QAAQC,IAAR,MANJ,yDADc,yBAAC,SAAD,2BAUdC,CAAQ5B,EACT,GAAE,CAACA,IAEJ,IAAQ6B,EACNZ,EADMY,MAAOC,EACbb,EADaa,SAAUC,EACvBd,EADuBc,OAAQC,EAC/Bf,EAD+Be,aAAcC,EAC7ChB,EAD6CgB,aAAcC,EAC3DjB,EAD2DiB,YAG7D,OACE,iCACE,SAAC7B,EAAD,CAAc8B,KAAK,SAASC,GAAIf,EAAhC,wBACCJ,IAAU,UAACT,EAAD,YACT,SAACC,EAAD,CACE4B,IAAKH,EAAczC,EAAAA,GAASyC,EAAc,uBAC1CI,IAAKT,KAEP,UAACnB,EAAD,YACE,SAACE,EAAD,UAAQiB,KAER,uBAAIC,KAEJ,0BACE,SAACnB,EAAD,uBACCoB,EAASA,EAAOQ,KAAI,SAAAC,GAAG,OAAIA,EAAIC,IAAR,IAAcC,KAAK,MAAQ,OAErD,0BACE,SAAC/B,EAAD,6BADF,IAC+BqB,MAE/B,0BACE,SAACrB,EAAD,uBADF,IACyBsB,YAI7B,SAACnB,EAAD,sCACA,UAACD,EAAD,YACE,SAAC,KAAD,CAASuB,GAAG,OAAOd,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAAlD,mBAGA,SAAC,KAAD,CAASa,GAAG,UAAUd,MAAO,CAAEC,KAAI,UAAEJ,EAASG,aAAX,aAAE,EAAgBC,MAArD,yBAIF,SAAC,EAAAoB,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/api.jsx","pages/MovieDetails/styled.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport const apiURL = 'https://image.tmdb.org/t/p/w500';\n\n export const GeterTrendFilms= async() =>{\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day?api_key=50f0044b98fb36babd948adb82a325bf'\n    );\n    return response;\n  } catch (error) {\n    \n  }\n     \n     }\n\nexport const GeterFilmsByKeyWord = async (search) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=50f0044b98fb36babd948adb82a325bf&query=${search}&page=1&language=en-US`\n      );\n      return response;\n    } catch (error) {}\n};\n \n\nexport const GeterFilmDetailsInfo = async movieId => {\n    try {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=50f0044b98fb36babd948adb82a325bf&language=en-US `\n    );\n      return response;\n    } catch (error) {}\n};\n \n  export const GeterFilmActorsTeam = async movieId => {\n    try {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=50f0044b98fb36babd948adb82a325bf&language=en-US `\n    );\n      return response;\n    } catch (error) {}\n};\n\n    export const GeterReviewsFilm = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=50f0044b98fb36babd948adb82a325bf&language=en-US&page=1 `\n      );\n      return response;\n    } catch (error) {}\n};\nGeterFilmsByKeyWord.propTypes = {\n  search: PropTypes.string.isRequired,\n};\nGeterFilmDetailsInfo.propTypes = {\n  search: PropTypes.string.isRequired,\n};\nGeterFilmActorsTeam.propTypes = {\n  search: PropTypes.string.isRequired,\n};\nGeterReviewsFilm.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\n\n\n// 50f0044b98fb36babd948adb82a325bf\n// https://api.themoviedb.org/3/movie/550?api_key=50f0044b98fb36babd948adb82a32\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=50f0044b98fb36babd948adb82a325bf\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BackToButton = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 145px;\n  height: 40px;\n  margin: 0;\n  text-decoration: none;\n`;\n\nexport const Wrapper = styled.div`\n  padding: 20px;\n  display: flex;\n  align-items: flex-end;\n  border-bottom: 2px solid #ccc;\n`;\n\nexport const Poster = styled.img`\n  height: 350px;\n  margin-left: 20px;\n`;\n\nexport const Description = styled.div`\n  margin-left: 20px;\n  font-weight: 400;\n  color: black;\n`;\n\nexport const Text = styled.span`\n  color: blue;\n`;\n\nexport const Title = styled.h1`\n  color: brown;\n`;\nexport const WrapperLink = styled.ul`\n  padding-bottom: 20px;\n  display: flex;\n  flex-direction: column;\n  border-bottom: 2px solid #ccc;\n  gap: 5px;\n`;\nexport const Title2 = styled.h5`\n  margin-left: 40px;\n  margin-bottom: 0;\n  margin-top: 15px;\n`; // export const IconBack = styled(BiArrowBack)`\n//   width: 32px;\n//   height: 32px;\n//   fill: white;\n//   transition: fill 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n//   &:hover {\n//     fill: orange;\n//   }\n// `;\n","import React, { useState, useEffect, Suspense} from 'react';\nimport { useParams, Outlet, NavLink, useLocation } from 'react-router-dom';\nimport { apiURL, GeterFilmDetailsInfo } from '../../components/api';\nimport {\n  Wrapper,\n  Poster,\n  Description,\n  Text,\n  Title,\n  WrapperLink,\n  Title2,\n  BackToButton,\n} from './styled';\n\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n  const location = useLocation();\n  const linkBack = location.state.from;\n\n  useEffect(() => {\n    async function getFilm(movieId) {\n      try {\n        const { data } = await GeterFilmDetailsInfo(movieId);\n\n        setMovie(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilm(movieId);\n  }, [movieId]);\n\n  const { title, overview, genres, release_date, vote_average, poster_path } =\n    movie;\n\n  return (\n    <>\n      <BackToButton type=\"button\" to={linkBack}>{`<< Back To`}</BackToButton>\n      {movie && (<Wrapper>\n        <Poster\n          src={poster_path ? apiURL + poster_path : 'Poster not available'}\n          alt={title}\n        />\n        <Description>\n          <Title>{title}</Title>\n\n          <p>{overview}</p>\n\n          <p>\n            <Text>Genres: </Text>\n            {genres ? genres.map(gen => gen.name).join(', ') : ''}\n          </p>\n          <p>\n            <Text>Release Date: </Text> {release_date}\n          </p>\n          <p>\n            <Text>Rating: </Text> {vote_average}\n          </p>\n        </Description>\n      </Wrapper>)}\n      <Title2>Additional Information</Title2>\n      <WrapperLink>\n        <NavLink to=\"cast\" state={{ from: location.state?.from }}>\n          Cast\n        </NavLink>\n        <NavLink to=\"reviews\" state={{ from: location.state?.from }}>\n          Reviews\n        </NavLink>\n      </WrapperLink>\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["apiURL","GeterTrendFilms","axios","response","GeterFilmsByKeyWord","search","GeterFilmDetailsInfo","movieId","GeterFilmActorsTeam","GeterReviewsFilm","propTypes","PropTypes","BackToButton","styled","NavLink","Wrapper","Poster","Description","Text","Title","WrapperLink","Title2","useParams","useState","movie","setMovie","location","useLocation","linkBack","state","from","useEffect","data","console","log","getFilm","title","overview","genres","release_date","vote_average","poster_path","type","to","src","alt","map","gen","name","join","Suspense","fallback"],"sourceRoot":""}