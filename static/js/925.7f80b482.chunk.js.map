{"version":3,"file":"static/js/925.7f80b482.chunk.js","mappings":"yNA2CA,UAtCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeE,OAbFC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAAuBL,GAAvB,mGAE2BM,EAAAA,EAAAA,IAAiBN,GAF5C,gBAEYO,EAFZ,EAEYA,KAERH,EAAWG,EAAKC,SAJpB,gDAMIC,QAAQC,IAAR,MANJ,yDADc,yBAAC,SAAD,2BAUdC,CAAQX,EACT,GAAE,CAACA,KAGA,+BAEHG,EAAQS,OAAS,GAChB,wCAEA,wBAEGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,gBAAoBA,OAAQA,EAA5B,WACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,OAWxB,C,sOCtCYC,EAAS,kCAERC,EAAe,mCAAE,6GAEJC,EAAAA,EAAAA,IACrB,0FAHyB,cAErBC,EAFqB,yBAKpBA,GALoB,wFAAF,qDAYhBC,EAAmB,mCAAG,WAAOC,GAAP,gGAENH,EAAAA,EAAAA,IAAA,mGACuEG,EADvE,2BAFM,cAEvBF,EAFuB,yBAKtBA,GALsB,wFAAH,sDAUnBG,EAAoB,mCAAG,WAAMxB,GAAN,gGAEXoB,EAAAA,EAAAA,IAAA,6CACiBpB,EADjB,8DAFW,cAE5BqB,EAF4B,yBAKvBA,GALuB,wFAAH,sDASlBI,EAAmB,mCAAG,WAAMzB,GAAN,gGAEZoB,EAAAA,EAAAA,IAAA,6CACiBpB,EADjB,sEAFY,cAE7BqB,EAF6B,yBAKxBA,GALwB,wFAAH,sDASjBf,EAAgB,mCAAG,WAAMN,GAAN,gGAEPoB,EAAAA,EAAAA,IAAA,6CACiBpB,EADjB,6EAFO,cAExBqB,EAFwB,yBAKvBA,GALuB,wFAAH,sDAQjCC,EAAoBI,UAAY,CAC9BH,OAAQI,IAAAA,OAAAA,YAEVH,EAAqBE,UAAY,CAC/BH,OAAQI,IAAAA,OAAAA,YAEVF,EAAoBC,UAAY,CAC9BH,OAAQI,IAAAA,OAAAA,YAEVrB,EAAiBoB,UAAY,CAC3BH,OAAQI,IAAAA,OAAAA,W","sources":["components/MovieDetailsReviews/MovieDetailsReviews.jsx","components/api.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {  GeterReviewsFilm } from '../api';\n\n\nfunction MovieDetailsReviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    async function getFilm(movieId) {\n      try {\n        const { data } = await GeterReviewsFilm(movieId);\n\n        setReviews(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilm(movieId);\n  }, [movieId]);\n\n    return (\n      <>\n       {\n  !reviews.length > 0 ? (\n    <h1>No reviews</h1>\n  ) : (\n    <ul>\n     \n      {reviews.map(review => (\n        <li key={review.id} review={review} >\n          <p>{review.author}</p>\n          <p>{review.content}</p>\n          </li>\n      ))}\n    </ul>\n  )\n}\n      </>\n    );\n}\n\nexport default MovieDetailsReviews;\n","import axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport const apiURL = 'https://image.tmdb.org/t/p/w500';\n\n export const GeterTrendFilms= async() =>{\n  try {\n    const response = await axios.get(\n      'https://api.themoviedb.org/3/trending/all/day?api_key=50f0044b98fb36babd948adb82a325bf'\n    );\n    return response;\n  } catch (error) {\n    \n  }\n     \n     }\n\nexport const GeterFilmsByKeyWord = async (search) => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/search/movie?api_key=50f0044b98fb36babd948adb82a325bf&query=${search}&page=1&language=en-US`\n      );\n      return response;\n    } catch (error) {}\n};\n \n\nexport const GeterFilmDetailsInfo = async movieId => {\n    try {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=50f0044b98fb36babd948adb82a325bf&language=en-US `\n    );\n      return response;\n    } catch (error) {}\n};\n \n  export const GeterFilmActorsTeam = async movieId => {\n    try {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=50f0044b98fb36babd948adb82a325bf&language=en-US `\n    );\n      return response;\n    } catch (error) {}\n};\n\n    export const GeterReviewsFilm = async movieId => {\n    try {\n      const response = await axios.get(\n        `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=50f0044b98fb36babd948adb82a325bf&language=en-US&page=1 `\n      );\n      return response;\n    } catch (error) {}\n};\nGeterFilmsByKeyWord.propTypes = {\n  search: PropTypes.string.isRequired,\n};\nGeterFilmDetailsInfo.propTypes = {\n  search: PropTypes.string.isRequired,\n};\nGeterFilmActorsTeam.propTypes = {\n  search: PropTypes.string.isRequired,\n};\nGeterReviewsFilm.propTypes = {\n  search: PropTypes.string.isRequired,\n};\n\n\n\n// 50f0044b98fb36babd948adb82a325bf\n// https://api.themoviedb.org/3/movie/550?api_key=50f0044b98fb36babd948adb82a32\n\n// https://api.themoviedb.org/3/trending/all/day?api_key=50f0044b98fb36babd948adb82a325bf\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n// https://api.themoviedb.org/3/movie/{movie_id}?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/movie/{movie_id}/credits?api_key=<<api_key>>&language=en-US\n// https://api.themoviedb.org/3/movie/{movie_id}/reviews?api_key=<<api_key>>&language=en-US&page=1"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","GeterReviewsFilm","data","results","console","log","getFilm","length","map","review","author","content","id","apiURL","GeterTrendFilms","axios","response","GeterFilmsByKeyWord","search","GeterFilmDetailsInfo","GeterFilmActorsTeam","propTypes","PropTypes"],"sourceRoot":""}